{"ast":null,"code":"import _objectSpread from \"C:\\\\xampp\\\\htdocs\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\xampp\\\\htdocs\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\my-app\\\\src\\\\components\\\\counters.jsx\";\nimport React, { Component } from 'react';\nimport Counter from './counter';\n\nvar Counters =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counters, _Component);\n\n  function Counters() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counters);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counters)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      counters: [{\n        id: 1,\n        value: 4\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 7\n      }, {\n        id: 4,\n        value: 1\n      }]\n    };\n\n    _this.handleIncrement = function (counter) {\n      console.log('ok');\n\n      var counters = _toConsumableArray(_this.state.counters); //clone state counters to a new counters array\n\n\n      var index = counters.indexOf(counter);\n      counters[index] = _objectSpread({}, counter);\n      counters[index].value++;\n\n      _this.setState({\n        counters: counters\n      });\n    };\n\n    _this.handleReset = function () {\n      var counters = _this.state.counters.map(function (c) {\n        c.value = 0;\n        return c;\n      });\n\n      _this.setState({\n        counters: counters\n      });\n    };\n\n    _this.handleDelete = function (counterId) {\n      var counters = _this.state.counters.filter(function (c) {\n        return c.id !== counterId;\n      });\n\n      _this.setState({\n        counters: counters\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Counters, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleReset,\n        className: \"btn btn-primary btn-sm m-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Reset\"), this.state.counters.map(function (counter) {\n        return React.createElement(Counter, {\n          key: counter.id,\n          onDelete: function onDelete() {\n            return _this2.handleDelete(counter.id);\n          },\n          onIncrement: function onIncrement() {\n            return _this2.handleIncrement(counter);\n          },\n          counter: counter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return Counters;\n}(Component);\n\nexport default Counters;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\my-app\\src\\components\\counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleIncrement","counter","console","log","index","indexOf","setState","handleReset","map","c","handleDelete","counterId","filter"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE,CACN;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADM,EAEN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFM,EAGN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHM,EAIN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAJM;AADN,K;;UASRC,e,GAAkB,UAAAC,OAAO,EAAI;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AACA,UAAMN,QAAQ,sBAAO,MAAKD,KAAL,CAAWC,QAAlB,CAAd,CAFyB,CAEkB;;;AAC3C,UAAMO,KAAK,GAAGP,QAAQ,CAACQ,OAAT,CAAiBJ,OAAjB,CAAd;AACAJ,MAAAA,QAAQ,CAACO,KAAD,CAAR,qBAAuBH,OAAvB;AACAJ,MAAAA,QAAQ,CAACO,KAAD,CAAR,CAAgBL,KAAhB;;AACA,YAAKO,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAAEA;AAAZ,OAAd;AACH,K;;UAEDU,W,GAAc,YAAM;AAChB,UAAMV,QAAQ,GAAG,MAAKD,KAAL,CAAWC,QAAX,CAAoBW,GAApB,CAAwB,UAAAC,CAAC,EAAI;AAC1CA,QAAAA,CAAC,CAACV,KAAF,GAAU,CAAV;AACA,eAAOU,CAAP;AACH,OAHgB,CAAjB;;AAKA,YAAKH,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACH,K;;UAEDa,Y,GAAe,UAAAC,SAAS,EAAI;AACxB,UAAMd,QAAQ,GAAG,MAAKD,KAAL,CAAWC,QAAX,CAAoBe,MAApB,CAA2B,UAAAH,CAAC;AAAA,eAAIA,CAAC,CAACX,EAAF,KAASa,SAAb;AAAA,OAA5B,CAAjB;;AACA,YAAKL,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAAEA;AAAZ,OAAd;AACH,K;;;;;;;6BAEQ;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,KAAKU,WAAtB;AAAmC,QAAA,SAAS,EAAC,4BAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEM,KAAKX,KAAL,CAAWC,QAAX,CAAoBW,GAApB,CAAwB,UAAAP,OAAO;AAAA,eAC7B,oBAAC,OAAD;AAAS,UAAA,GAAG,EAAEA,OAAO,CAACH,EAAtB;AAA0B,UAAA,QAAQ,EAAE;AAAA,mBAAM,MAAI,CAACY,YAAL,CAAkBT,OAAO,CAACH,EAA1B,CAAN;AAAA,WAApC;AAAyE,UAAA,WAAW,EAAE;AAAA,mBAAM,MAAI,CAACE,eAAL,CAAqBC,OAArB,CAAN;AAAA,WAAtF;AAA2H,UAAA,OAAO,EAAEA,OAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD6B;AAAA,OAA/B,CAFN,CADJ;AAQH;;;;EA1CkBR,S;;AA6CvB,eAAeE,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Counter from './counter';\r\n\r\nclass Counters extends Component {\r\n    state = { \r\n        counters: [\r\n            { id: 1, value: 4 },\r\n            { id: 2, value: 0 },\r\n            { id: 3, value: 7 },\r\n            { id: 4, value: 1 }\r\n        ]\r\n    };\r\n\r\n    handleIncrement = counter => {\r\n        console.log('ok');\r\n        const counters = [...this.state.counters]; //clone state counters to a new counters array\r\n        const index = counters.indexOf(counter);\r\n        counters[index] = { ...counter };\r\n        counters[index].value++;\r\n        this.setState({ counters: counters });\r\n    };\r\n\r\n    handleReset = () => {\r\n        const counters = this.state.counters.map(c => {\r\n            c.value = 0;\r\n            return c;\r\n        });\r\n\r\n        this.setState({ counters });\r\n    };\r\n\r\n    handleDelete = counterId => {\r\n        const counters = this.state.counters.filter(c => c.id !== counterId);\r\n        this.setState({ counters: counters });\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div>\r\n                <button onClick={this.handleReset} className=\"btn btn-primary btn-sm m-2\">Reset</button>\r\n                { this.state.counters.map(counter => (\r\n                    <Counter key={counter.id} onDelete={() => this.handleDelete(counter.id)} onIncrement={() => this.handleIncrement(counter)} counter={counter} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Counters;"]},"metadata":{},"sourceType":"module"}